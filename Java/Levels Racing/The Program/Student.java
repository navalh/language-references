/* This is Student.java, which acts as an object blueprint (class) to store 
 *data of a student record. Created by Naval Handa, on 24.02.2013, Emirates 
 *International School Meadows. Made on a Sony Vaio E-Series (VPCEB46FG) 
 *using JCreator. */

class Student {
	private int id; /*Unique id of a student generated by the program: 
	the key field of the StudentFile.*/
	
	private String name;//Name of a student.
	private int age;// Age of a student.
	private String address; //Address of a student.
	private int classesTaught; //Number of classes a student has been taught.
	private String groupName; /*Name of the teaching group the student belongs 
	to. For example, C1 is the first Child class.*/
	
	private int feesPaid; //Amount of fees paid so far by a student.
	private int racingLevel; /*The relative racing ability of a student, 
	measured from 1-10.*/
	private double average400; /*The average lap time for a 400 m circuit 
	of a student.*/
	private double average800; /*The average lap time for a 800 m circuit 
	of a student.*/
	private double average1000; /*The average lap time for a 1000 m circuit 
	of a student.*/
	
	//Constructor for when making a new student record.
	Student (String name, int age, String address, int perceivedRacingLevel) { 
		this.name = name;
		this.age = age;
		this.address = address;
		racingLevel = perceivedRacingLevel;
	}
	//Constructor for the subclass Racer to use.
	Student (int id, String name, int racingLevel) {
		this.id = id;
		this.name = name;
		this.racingLevel = racingLevel;
	}
	//Default constructor when no parameter is passed from the calling method.
	Student() { 
		name= "";
		age=0;
		address= "";
		racingLevel=0;
	}
	
	/*The set and get methods for each variable. The get methods return the 
	 *desired type of the variable and have no parameter. The set methods return 
	 *no data and have a parameter of the desired variable from the calling method. */
	int getId() {
		return id;
	}
	
	void setId(int id) {
		this.id = id;
	}
	
	String getName() {
		return name;
	}
	
	void setName(String name) {
		this.name = name;
	}
	
	int getAge() {
		return age;
	}
	
	void setAge(int age) {
		this.age = age;
	}
	
	String getAddress() {
		return address;
	}
	
	void setAddress(String address) {
		this.address = address;
	}
	
	int getClassesTaught() {
		return classesTaught;
	}
	
	void setClassesTaught(int classesTaught) {
		this.classesTaught = classesTaught;
	}
	
	String getGroupName() {
		return groupName;
	}
	
	void setGroupName(String groupName) {
		this.groupName = groupName;
	}
	
	int getFeesPaid() {
		return feesPaid;
	}
	
	void setFeesPaid(int feesPaid) {
		this.feesPaid = feesPaid;
	}
	
	int getRacingLevel() {
		return racingLevel;
	}
	
	void setRacingLevel(int racingLevel) {
		this.racingLevel = racingLevel;
	}
	
	double getAverage400() {
		return average400;
	}
	
	void setAverage400(double average400) {
		this.average400 = average400;
	}
	
	double getAverage800() {
		return average800;
	}
	
	void setAverage800(double average800) {
		this.average800 = average800;
	}
	
	double getAverage1000() {
		return average1000;
	}
	
	void setAverage1000(double average1000) {
		this.average1000 = average1000;
	}
	
	/*This method displays all the data of any given record. This method will 
	 *later be overriden by the Racer class to display the data of a racer.*/
	void displayRecordAllData() {
		System.out.printf("%-4s%-18s%-5s%-22s%-9s%-5s\n\n", "ID", "Student Name", "Age", "Address", "Classes", "Fees Paid");
		System.out.printf("%-4d%-18s%-5d%-22s%-9d%-5d\n\n", getId(), getName(), getAge(), getAddress(), getClassesTaught(), getFeesPaid());
		System.out.printf("%-12s%-15s%-12s%-12s%-12s\n\n", "Group Name", "Racing Level", "Avg. 400m", "Avg. 800m", "Avg. 1000m");
		System.out.printf("%-12s%-15d%2.2f%12.2f%12.2f\n\n", getGroupName(), getRacingLevel(), getAverage400(), getAverage800(), getAverage1000());
	}
	
	//This displays only the personal data of a record.
	void displayRecordPersonalData() {
		System.out.printf("%-4d%-18s%-5d%-22s%-9d%-12s%-5d\n\n", getId(), getName(), getAge(), getAddress(), getClassesTaught(), getGroupName(), getFeesPaid());
	}
	
	//This displays only the performance data of a record.
	void displayRecordPerformanceData() {
		System.out.printf("%-4d%-18s%-5d%-15d%2.2f%12.2f%12.2f\n\n", getId(), getName(), getAge(), getRacingLevel(), getAverage400(), getAverage800(), getAverage1000());
	}
}
